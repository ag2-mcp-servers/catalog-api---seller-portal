# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T11:52:54+00:00



import argparse
import json
import os
from typing import *
from typing import Optional

from autogen.mcp.mcp_proxy import MCPProxy
from autogen.mcp.mcp_proxy.security import APIKeyHeader, BaseSecurity
from fastapi import Header, Path, Query

from models import (
    ApiCatalogSellerPortalBrandsBrandIdGetResponse,
    ApiCatalogSellerPortalBrandsBrandIdPutRequest,
    ApiCatalogSellerPortalBrandsGetResponse,
    ApiCatalogSellerPortalBrandsPostRequest,
    ApiCatalogSellerPortalBrandsPostResponse,
    ApiCatalogSellerPortalCategoryTreeCategoriesCategoryIdGetResponse,
    ApiCatalogSellerPortalCategoryTreeCategoriesPostRequest,
    ApiCatalogSellerPortalCategoryTreeCategoriesPostResponse,
    ApiCatalogSellerPortalCategoryTreeGetResponse,
    ApiCatalogSellerPortalCategoryTreePutRequest,
    ApiCatalogSellerPortalProductsParamGetResponse,
    ApiCatalogSellerPortalProductsPostRequest,
    ApiCatalogSellerPortalProductsPostResponse,
    ApiCatalogSellerPortalProductsProductIdDescriptionGetResponse,
    ApiCatalogSellerPortalProductsProductIdDescriptionPutRequest,
    ApiCatalogSellerPortalProductsProductIdGetResponse,
    ApiCatalogSellerPortalProductsProductIdPutRequest,
    ApiCatalogSellerPortalSkusIdsGetResponse,
    ApiCatalogSellerPortalSkusSearchGetResponse,
)

app = MCPProxy(
    contact={},
    description="\r\nWith the Catalog API for Seller Portal, you will be able to create, edit and consult products and their variations, brands, and categories.\r\n\r\n> This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).\r\n\r\n## Index\r\n\r\n### Product\r\n\r\n`GET` [Get Product by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-productId-)\r\n`PUT` [Update Product](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/products/-productId-)\r\n`GET` [Get Product Description by Product ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-productId-/description)\r\n`PUT` [Update Product Description by Product ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/products/-productId-/description)\r\n`GET` [Get Product by external ID, SKU ID, SKU external ID or slug](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-param-)\r\n`POST` [Create Product](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/products)\r\n\r\n### SKU\r\n\r\n`GET` [Search for SKU](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/skus/_search)\r\n`GET` [Get List of SKUs](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/skus/ids)\r\n\r\n### Brand\r\n\r\n`GET` [Get List of Brands](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/brands)\r\n`POST` [Create a Brand](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/brands)\r\n`GET` [Get Brand by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/brands/-brandId-)\r\n`PUT` [Update Brand](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/brands/-brandId-)\r\n\r\n### Category\r\n\r\n`GET` [Get Category Tree](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/category-tree)\r\n`PUT` [Update Category Tree](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/category-tree)\r\n`GET` [Get Category by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/category-tree/categories/-categoryId-)\r\n`POST` [Create a Category](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/category-tree/categories)",
    title='Catalog API - Seller Portal',
    version='1.0.0',
    servers=[
        {'url': 'https://vtex.local'},
        {
            'description': 'VTEX server URL.',
            'url': 'https://{accountName}.{environment}.com.br',
            'variables': {
                'accountName': {
                    'default': '{accountName}',
                    'description': 'Name of the VTEX account. Used as part of the URL.',
                },
                'environment': {
                    'default': '{environment}',
                    'description': 'Environment to use. Used as part of the URL.',
                },
            },
        },
    ],
)


@app.get(
    '/api/catalog-seller-portal/brands',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Retrieves general information about all brands of the store. It is mandatory to use at least one query parameter. 

## Response body example

```json
{
    "data": [
        {
            "id": "7",
            "name": "All For Paws",
            "isActive": true,
            "createdAt": "2022-01-17T19:43:14.18678Z",
            "updatedAt": "2022-01-17T19:43:14.18678Z"
        },
        {
            "id": "1",
            "name": "AOC",
            "isActive": true,
            "createdAt": "2021-08-16T21:13:40.55189Z",
            "updatedAt": "2021-08-16T21:13:40.55189Z"
        }
    ],
    "_metadata": {
        "total": 18,
        "from": 1,
        "to": 2,
        "orderBy": "name,asc"
    }
}
``` """,
    tags=['brand_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def list_brand(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    q: Optional[str] = None,
    from_: Optional[str] = Query(None, alias='from'),
    to: Optional[str] = None,
    order_by: Optional[str] = Query(None, alias='orderBy'),
    name: Optional[str] = None,
):
    """
    Get List of Brands
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/api/catalog-seller-portal/brands',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Creates a new brand.

## Request body example

```json
{
  "name": "Zwilling",
  "isActive": true
}
```

## Response body example

```json
{
  "id": "20",
  "name": "Zwilling",
  "isActive": true,
  "createdAt": "2021-05-17T15:20:36.077253+00:00",
  "updatedAt": "2021-01-18T14:41:45.696488+00:00"
}
``` """,
    tags=['brand_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def post_brand(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    body: ApiCatalogSellerPortalBrandsPostRequest = None,
):
    """
    Create Brand
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/catalog-seller-portal/brands/{brandId}',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Retrieves general information about a brand by its ID.

## Response body example

```json
{
  "id": "863",
  "name": "Zwilling",
  "isActive": false,
  "createdAt": "2021-01-18T14:41:45.696488+00:00",
  "updatedAt": "2021-01-18T14:41:45.696488+00:00"
}
``` """,
    tags=['brand_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def get_brand(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    brand_id: str = Path(..., alias='brandId'),
):
    """
    Get Brand by ID
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.put(
    '/api/catalog-seller-portal/brands/{brandId}',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Updates an existing brand. 

## Request body example

```json
{
  "id": "20",
  "name": "Zwilling",
  "isActive": true
}
``` """,
    tags=['brand_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def put_brand(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    brand_id: str = Path(..., alias='brandId'),
    body: ApiCatalogSellerPortalBrandsBrandIdPutRequest = None,
):
    """
    Update Brand
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/catalog-seller-portal/category-tree',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Retrieves general information about the category tree from the store.

## Response body example

```json
{
    "roots": [
        {
            "value": {
                "id": "2",
                "name": "Departamento Artesanato",
                "isActive": true
            },
            "children": [
                {
                    "value": {
                        "id": "3",
                        "name": "Artesanato de Barro",
                        "isActive": false
                    },
                    "children": [
                        {
                            "value": {
                                "id": "4",
                                "name": "Artesanato de Barro Vermelho",
                                "isActive": false
                            },
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "value": {
                "id": "5",
                "name": "Perfumes",
                "isActive": false
            },
            "children": [
                {
                    "value": {
                        "id": "6",
                        "name": "Perfume Feminino",
                        "isActive": false
                    },
                    "children": []
                },
                {
                    "value": {
                        "id": "7",
                        "name": "Perfume Masculino",
                        "isActive": false,
                        "displayOnMenu": false,
                        "score": 0,
                        "filterByBrand": false,
                        "isClickable": false
                    },
                    "children": []
                }
            ]
        }
    ],
    "createdAt": "2021-08-16T20:57:13.070813Z",
    "updatedAt": "2022-07-07T14:24:56.416337Z"
}
``` """,
    tags=['category_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def get_category_tree(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    depth: Optional[int] = None,
):
    """
    Get Category Tree
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.put(
    '/api/catalog-seller-portal/category-tree',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Updates the existing categories in the category tree.

## Request body example

```json
{
  "roots": [
    {
      "value": {
        "id": "2",
        "name": "Departamento Artesanato",
        "isActive": true
      },
      "children": [
        {
          "value": {
            "id": "3",
            "name": "Artesanato de Barro",
            "isActive": false
          },
          "children": [
            {
              "value": {
                "id": "4",
                "name": "Artesanato de Barro Vermelho",
                "isActive": false
              },
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": {
        "id": "5",
        "name": "Perfumes",
        "isActive": false
      },
      "children": [
        {
          "value": {
            "id": "6",
            "name": "Perfume Feminino",
            "isActive": false
          },
          "children": []
        },
        {
          "value": {
            "id": "7",
            "name": "Perfume Masculino",
            "isActive": false,
            "displayOnMenu": false,
            "score": 0,
            "filterByBrand": false,
            "isClickable": false
          },
          "children": []
        }
      ]
    }
  ]
}
``` """,
    tags=['category_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def update_category_tree(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    body: ApiCatalogSellerPortalCategoryTreePutRequest = ...,
):
    """
    Update Category Tree
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/api/catalog-seller-portal/category-tree/categories',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Creates a new category.

## Request body example

```json
{
  "parentId": "567",
  "Name": "Beauty"
}
```

## Response body example

```json
{
  "value": {
    "id": "1",
    "name": "Beauty",
    "isActive": false
  },
  "children": [
    {
      "value": {
        "id": "2",
        "name": "Perfumes",
        "isActive": false
      }
    }
  ]
}
``` """,
    tags=['category_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def create_category(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    body: ApiCatalogSellerPortalCategoryTreeCategoriesPostRequest = ...,
):
    """
    Create Category
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/catalog-seller-portal/category-tree/categories/{categoryId}',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Retrieves general information about a category by its ID. 

## Response body example

```json
{
  "value": {
    "id": "1",
    "name": "sandboxintegracao",
    "isActive": false
  },
  "children": [
    {
      "value": {
        "id": "2",
        "name": "Perfumes",
        "isActive": false
      }
    }
  ]
}
``` """,
    tags=['category_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def getbyid(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    category_id: str = Path(..., alias='categoryId'),
):
    """
    Get Category by ID
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/api/catalog-seller-portal/products',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Creates a new product and its SKUs. 


## Request body example

```json
{
    "status": "active",
    "name": "VTEX 10 Shirt",
    "description": "Shirt number 10 by VTEX.",
    "brandId": "1",
    "categoryIds": [
        "732"
    ],
    "specs": [
        {
            "name": "Color",
            "values": [
                "Black",
                "White"
            ]
        },
        {
            "name": "Size",
            "values": [
                "S",
                "M",
                "L"
            ]
        }
    ],
    "attributes": [
        {
            "name": "Fabric",
            "value": "Cotton"
        },
        {
            "name": "Gender",
            "value": "Feminine"
        }
    ],
    "slug": "/vtex-shirt",
    "images": [
        {
            "id": "vtex_logo.jpg",
            "url": "https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg",
            "alt": "VTEX"
        }
    ],
    "skus": [
        {
            "name": "VTEX Shirt Black Size S",
            "externalId": "1909621862",
            "manufacturerCode": "1234567",
            "isActive": true,
            "weight": 300,
            "dimensions": {
                "width": 1.5,
                "height": 2.1,
                "length": 1.6
            },
            "specs": [
                {
                    "name": "Color",
                    "value": "Black"
                },
                {
                    "name": "Size",
                    "value": "S"
                }
            ],
            "images": [
                "vtex_logo.jpg"
            ]
        },
        {
            "name": "VTEX Shirt White Size L",
            "externalId": "1909621862",
            "manufacturerCode": "1234568",
            "isActive": true,
            "weight": 300,
            "dimensions": {
                "width": 1.5,
                "height": 2.1,
                "length": 1.6
            },
            "specs": [
                {
                    "name": "Color",
                    "value": "White"
                },
                {
                    "name": "Size",
                    "value": "L"
                }
            ],
            "images": [
                "vtex_logo.jpg"
            ]
        }
    ],
    "origin": "vtxleo7778",
    "transportModal": "110",
    "taxCode": "234"
}
```

## Response body example

```json
{
    "id": "189371",
    "status": "active",
    "name": "VTEX 10 Shirt",
    "brandId": "1",
    "brandName": "AOC",
    "categoryIds": [
        "732"
    ],
    "categoryNames": [
        "/Men/Acessories/"
    ],
    "specs": [
        {
            "name": "Color",
            "values": [
                "Black",
                "White"
            ]
        },
        {
            "name": "Size",
            "values": [
                "S",
                "M",
                "L"
            ]
        }
    ],
    "attributes": [
        {
            "name": "Fabric",
            "value": "Cotton"
        },
        {
            "name": "Gender",
            "value": "Feminine"
        }
    ],
    "slug": "/vtex-shirt",
    "images": [
        {
            "id": "vtex_logo.jpg",
            "url": "https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg",
            "alt": "VTEX"
        }
    ],
    "skus": [
        {
            "id": "182907",
            "name": "VTEX Shirt Black Size S",
            "externalId": "1909621862",
            "manufacturerCode": "1234567",
            "isActive": true,
            "weight": 300,
            "dimensions": {
                "width": 1.5,
                "height": 2.1,
                "length": 1.6
            },
            "specs": [
                {
                    "name": "Color",
                    "value": "Black"
                },
                {
                    "name": "Size",
                    "value": "S"
                }
            ],
            "images": [
                "vtex_logo.jpg"
            ]
        },
        {
            "id": "182908",
            "name": "VTEX Shirt White Size L",
            "externalId": "1909621862",
            "manufacturerCode": "1234568",
            "isActive": true,
            "weight": 300,
            "dimensions": {
                "width": 1.5,
                "height": 2.1,
                "length": 1.6
            },
            "specs": [
                {
                    "name": "Color",
                    "value": "White"
                },
                {
                    "name": "Size",
                    "value": "L"
                }
            ],
            "images": [
                "vtex_logo.jpg"
            ]
        }
    ],
    "origin": "vtxleo7778",
    "transportModal": "110",
    "taxCode": "234",
    "createdAt": "2022-11-01T14:15:54.262702Z",
    "updatedAt": "2022-11-01T14:15:54.262702Z"
}
``` """,
    tags=['product_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def post_product(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    body: ApiCatalogSellerPortalProductsPostRequest = None,
):
    """
    Create Product
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/catalog-seller-portal/products/{param}',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Retrieves general information about a product by its external ID, SKU ID, SKU external ID or product slug. The response also has information about the product's SKUs. 
## Response body example

```json
{
    "id": "189371",
    "status": "active",
    "name": "VTEX 10 Shirt",
    "brandId": "1",
    "brandName": "AOC",
    "categoryIds": [
        "732"
    ],
    "categoryNames": [
        "/sandboxintegracao/AcessÃ³rios/"
    ],
    "specs": [
        {
            "name": "Color",
            "values": [
                "Black",
                "White"
            ]
        },
        {
            "name": "Size",
            "values": [
                "S",
                "M",
                "L"
            ]
        }
    ],
    "attributes": [
        {
            "name": "Fabric",
            "value": "Cotton"
        },
        {
            "name": "Gender",
            "value": "Feminine"
        }
    ],
    "slug": "/vtex-shirt",
    "images": [
        {
            "id": "vtex_logo.jpg",
            "url": "https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg",
            "alt": "VTEX"
        }
    ],
    "skus": [
        {
            "id": "182907",
            "name": "VTEX Shirt Black Size S",
            "externalId": "1909621862",
            "manufacturerCode": "1234567",
            "isActive": true,
            "weight": 300,
            "dimensions": {
                "width": 1.5,
                "height": 2.1,
                "length": 1.6
            },
            "specs": [
                {
                    "name": "Color",
                    "value": "Black"
                },
                {
                    "name": "Size",
                    "value": "S"
                }
            ],
            "images": [
                "vtex_logo.jpg"
            ]
        },
        {
            "id": "182908",
            "name": "VTEX Shirt White Size L",
            "externalId": "1909621862",
            "manufacturerCode": "1234568",
            "isActive": true,
            "weight": 300,
            "dimensions": {
                "width": 1.5,
                "height": 2.1,
                "length": 1.6
            },
            "specs": [
                {
                    "name": "Color",
                    "value": "White"
                },
                {
                    "name": "Size",
                    "value": "L"
                }
            ],
            "images": [
                "vtex_logo.jpg"
            ]
        }
    ],
    "transportModal": "123",
    "taxCode": "100",
    "origin": "vtxleo7778",
    "createdAt": "2022-10-31T16:28:25.578067Z",
    "updatedAt": "2022-10-31T16:28:25.578067Z"
}
``` """,
    tags=['product_operations', 'sku_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def get_product_query(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    param: str = ...,
):
    """
    Get Product by external ID,  SKU ID, SKU external ID or slug
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/catalog-seller-portal/products/{productId}',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Retrieves general information about a product by its ID. The response also has information about the product's SKUs. 

 ## Response body example

```json
{
    "id": "189371",
    "status": "active",
    "name": "VTEX 10 Shirt",
    "brandId": "1",
    "brandName": "AOC",
    "categoryIds": [
        "732"
    ],
    "categoryNames": [
        "/sandboxintegracao/AcessÃ³rios/"
    ],
    "specs": [
        {
            "name": "Color",
            "values": [
                "Black",
                "White"
            ]
        },
        {
            "name": "Size",
            "values": [
                "S",
                "M",
                "L"
            ]
        }
    ],
    "attributes": [
        {
            "name": "Fabric",
            "value": "Cotton"
        },
        {
            "name": "Gender",
            "value": "Feminine"
        }
    ],
    "slug": "/vtex-shirt",
    "images": [
        {
            "id": "vtex_logo.jpg",
            "url": "https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg",
            "alt": "VTEX"
        }
    ],
    "skus": [
        {
            "id": "182907",
            "externalId": "1909621862",
            "manufacturerCode": "1234567",
            "isActive": true,
            "weight": 300,
            "dimensions": {
                "width": 1.5,
                "height": 2.1,
                "length": 1.6
            },
            "specs": [
                {
                    "name": "Color",
                    "value": "Black"
                },
                {
                    "name": "Size",
                    "value": "S"
                }
            ],
            "images": [
                "vtex_logo.jpg"
            ]
        },
        {
            "id": "182908",
            "externalId": "1909621862",
            "manufacturerCode": "1234568",
            "isActive": true,
            "weight": 300,
            "dimensions": {
                "width": 1.5,
                "height": 2.1,
                "length": 1.6
            },
            "specs": [
                {
                    "name": "Color",
                    "value": "White"
                },
                {
                    "name": "Size",
                    "value": "L"
                }
            ],
            "images": [
                "vtex_logo.jpg"
            ]
        }
    ],
    "transportModal": "123",
    "taxCode": "100",
    "origin": "vtxleo7778",
    "createdAt": "2022-10-31T16:28:25.578067Z",
    "updatedAt": "2022-10-31T17:09:12.639088Z"
}
``` """,
    tags=['product_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def get_product(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    product_id: str = Path(..., alias='productId'),
):
    """
    Get Product by ID
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.put(
    '/api/catalog-seller-portal/products/{productId}',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Updates an existing product and its SKUs. 

## Request body example

```json
{
    "id": "189371",
    "status": "active",
    "name": "VTEX 10 Shirt",
    "description": "Shirt number 10 by VTEX.",
    "brandId": "1",
    "categoryIds": [
        "732"
    ],
    "specs": [
        {
            "name": "Color",
            "values": [
                "Black",
                "White"
            ]
        },
        {
            "name": "Size",
            "values": [
                "S",
                "M",
                "L"
            ]
        }
    ],
    "attributes": [
        {
            "name": "Fabric",
            "value": "Cotton"
        },
        {
            "name": "Gender",
            "value": "Feminine"
        }
    ],
    "slug": "/vtex-shirt",
    "transportModal": null,
    "taxCode": null,
    "images": [
        {
            "id": "vtex_logo.jpg",
            "url": "https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg",
            "alt": "VTEX"
        }
    ],
    "skus": [
        {
            "name": "VTEX Shirt Black Size S",
            "externalId": "1909621862",
            "manufacturerCode": "1234567",
            "isActive": true,
            "weight": 300,
            "dimensions": {
                "width": 1.5,
                "height": 2.1,
                "length": 1.6
            },
            "specs": [
                {
                    "name": "Color",
                    "value": "Black"
                },
                {
                    "name": "Size",
                    "value": "S"
                }
            ],
            "images": [
                "vtex_logo.jpg"
            ]
        },
        {
            "name": "VTEX Shirt White Size L",
            "externalId": "1909621862",
            "manufacturerCode": "1234568",
            "isActive": true,
            "weight": 300,
            "dimensions": {
                "width": 1.5,
                "height": 2.1,
                "length": 1.6
            },
            "specs": [
                {
                    "name": "Color",
                    "value": "White"
                },
                {
                    "name": "Size",
                    "value": "L"
                }
            ],
            "images": [
                "vtex_logo.jpg"
            ]
        }
    ],
    "origin": "vtxleo7778"
}
``` """,
    tags=['product_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def put_product(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    product_id: str = Path(..., alias='productId'),
    body: ApiCatalogSellerPortalProductsProductIdPutRequest = None,
):
    """
    Update Product
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/catalog-seller-portal/products/{productId}/description',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Retrieves the description of a product given a Product ID.

## Response body example

```json
{
    "productId": "61",
    "description": "Beautifully handmade laptop case/sleeve made in the Nepal Himalaya. It can be slipped inside your backpack or carried alone with space for all your work bits and pieces!",
    "createdAt": "2022-10-10T19:18:45.612317Z",
    "updatedAt": "2022-10-11T18:12:58.825544Z"
}
``` """,
    tags=['product_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def get_product_description(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    product_id: str = Path(..., alias='productId'),
):
    """
    Get Product Description by Product ID
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.put(
    '/api/catalog-seller-portal/products/{productId}/description',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Updates the description of a product given a Product ID.

## Request body example

```json
{
    "productId": "71",
    "description": "White shirt."
}
``` """,
    tags=['product_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def put_product_description(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    product_id: str = Path(..., alias='productId'),
    body: ApiCatalogSellerPortalProductsProductIdDescriptionPutRequest = None,
):
    """
    Update Product Description by Product ID
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/catalog-seller-portal/skus/_search',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Retrieves general information about an SKU taking into consideration the defined search criteria. It is mandatory to use at least one query parameter. 

## Response body example

```json
{
  "data": [
    {
      "id": "2",
      "productId": "2",
      "externalId": "1909621862"
    }
  ],
  "_metadata": {
    "total": 1,
    "from": 1,
    "to": 15
  }
}
``` """,
    tags=['sku_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def search_s_k_u(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    from_: Optional[str] = Query(None, alias='from'),
    to: Optional[str] = None,
    id: Optional[int] = None,
    externalid: Optional[int] = None,
):
    """
    Search for SKU
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/api/catalog-seller-portal/skus/ids',
    description="""  >ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests). 

 Retrieves general information about all SKUs.

## Response body example

```json
{
    "data": [
        "1",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "19",
        "2",
        "20",
        "21",
        "22",
        "23",
        "24"
    ],
    "_metadata": {
        "total": 65,
        "from": 1,
        "to": 15
    }
}
``` """,
    tags=['sku_operations'],
    security=[
        APIKeyHeader(name="X-VTEX-API-AppKey"),
        APIKeyHeader(name="X-VTEX-API-AppToken"),
    ],
)
def list_s_k_u(
    content__type: str = Header(..., alias='Content-Type'),
    accept: str = Header(..., alias='Accept'),
    from_: Optional[str] = Query(None, alias='from'),
    to: Optional[str] = None,
):
    """
    Get List of SKUs
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="MCP Server")
    parser.add_argument(
        "transport",
        choices=["stdio", "sse", "streamable-http"],
        help="Transport mode (stdio, sse or streamable-http)",
    )
    args = parser.parse_args()

    if "CONFIG_PATH" in os.environ:
        config_path = os.environ["CONFIG_PATH"]
        app.load_configuration(config_path)

    if "CONFIG" in os.environ:
        config = os.environ["CONFIG"]
        app.load_configuration_from_string(config)

    if "SECURITY" in os.environ:
        security_params = BaseSecurity.parse_security_parameters_from_env(
            os.environ,
        )

        app.set_security_params(security_params)

    mcp_settings = json.loads(os.environ.get("MCP_SETTINGS", "{}"))

    app.get_mcp(**mcp_settings).run(transport=args.transport)
